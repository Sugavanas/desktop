name: 'Desktop - Build and Release'

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-yarn-

      - name: Install and build dependencies
        run: yarn
        env:
          npm_config_arch: x64
          TARGET_ARCH: x64

      - name: Lint
        run: yarn lint

      - name: Validate changelog
        run: yarn validate-changelog

      - name: Ensure a clean working directory
        run: yarn check-modified

      - name: Build production app
        run: yarn build:prod
        env:
          npm_config_arch: x64
          TARGET_ARCH: x64

      - name: Prepare testing environment
        run: yarn test:setup

      - name: Run unit tests
        run: yarn test:unit:cov

      - name: Run script tests
        run: yarn test:script:cov

      - name: Run integration tests
        timeout-minutes: 5
        run: yarn test:integration

      - name: Package application
        run: yarn run package

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
            dist/*.txt
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
